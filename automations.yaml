- alias: "PLAYGROUND"
  trigger:
    platform: time_pattern
    hours: "/99999"
  action:
    - service: switch.turn_on
      data:
        entity_id: switch.sonoff_10002befc0

#do it on boot so sensor will be picked up by generic thermostat as it initializes later than him
- alias: "On boot refresh desired Spa temperature"
  trigger:
    platform: homeassistant
    event: start
  action:
    service: climate.set_temperature
    data_template:
        entity_id: climate.spa
        temperature: '{{ states.climate.spa.attributes.temperature }}'

- alias: "Playroom: Air quality"
  trigger:
    platform: time_pattern
    minutes: "/15"
  action:
    - service_template: >
        {% if states.sensor.xiaomi_pro_aqi.state | float > states.input_number.max_aqi_for_xiaomi.state | float and is_state('fan.playroom_xiaomi', 'off') %}
            fan.turn_on
        {% elif states.sensor.xiaomi_pro_aqi.state | float < states.input_number.max_aqi_for_xiaomi.state | float and is_state('fan.playroom_xiaomi', 'on') %}
            fan.turn_off
        {% else %}
            fan.xiaomi_miio_set_child_lock_on
        {% endif %}
      entity_id: 'fan.playroom_xiaomi'

- alias: "Garage: Air quality"
  trigger:
    platform: time_pattern
    minutes: "/15"
  action:
    - service_template: >
        {% if states.sensor.xiaomi_garage_aqi.state | float > states.input_number.max_aqi_for_xiaomi.state | float and is_state('fan.garage_xiaomi', 'off') %}
            fan.turn_on
        {% elif states.sensor.xiaomi_garage_aqi.state | float < states.input_number.max_aqi_for_xiaomi.state | float and is_state('fan.garage_xiaomi', 'on') %}
            fan.turn_off
        {% else %}
            fan.xiaomi_miio_set_child_lock_on
        {% endif %}
      entity_id: 'fan.garage_xiaomi'
        
- alias: "Bedroom: Air quality"
  trigger:
    platform: time_pattern
    minutes: "/15"
  action:
    - service_template: >
        {% if states.sensor.xiaomi_bedroom_aqi.state | float > states.input_number.max_aqi_for_xiaomi.state | float and is_state('fan.bedroom_xiaomi', 'off') %}
            fan.turn_on
        {% elif states.sensor.xiaomi_bedroom_aqi.state | float < states.input_number.max_aqi_for_xiaomi.state | float and is_state('fan.bedroom_xiaomi', 'on') %}
            fan.turn_off
        {% else %}
            fan.xiaomi_miio_set_child_lock_on
        {% endif %}
      entity_id: 'fan.bedroom_xiaomi'
        
- alias: "Kidsroom: Air quality"
  trigger:
    platform: time_pattern
    minutes: "/15"
  action:
    - service_template: >
        {% if states.sensor.xiaomi_kidsroom_aqi.state | float > states.input_number.max_aqi_for_xiaomi.state | float and is_state('fan.kidsroom_xiaomi', 'off') %}
            fan.turn_on
        {% elif states.sensor.xiaomi_kidsroom_aqi.state | float < states.input_number.max_aqi_for_xiaomi.state | float and is_state('fan.kidsroom_xiaomi', 'on') %}
            fan.turn_off
        {% else %}
            fan.xiaomi_miio_set_child_lock_on
        {% endif %}
      entity_id: 'fan.kidsroom_xiaomi'
        
- alias: "Upstairs: Humidity"
  trigger:
    platform: time_pattern
    minutes: "/15"
  action:
    - condition: or
      conditions:
        - condition: and
          conditions:
            - condition: state
              entity_id: 'switch.nawilzacz'
              state: 'off'
            - condition: template
              value_template: "{{ states.sensor.humidity_158d0002b6ca82.state | float < states.input_number.min_humidity.state | float }}"
        - condition: and
          conditions:
            - condition: state
              entity_id: 'switch.nawilzacz'
              state: 'on'
            - condition: template
              value_template: "{{ states.sensor.humidity_158d0002b6ca82.state | float > states.input_number.max_humidity.state | float }}"
    - service: switch.toggle
      data:
        entity_id: switch.nawilzacz

- alias: "Calculate if nobody is at home"
  trigger:
    platform: state
    entity_id: device_tracker.google_maps_107747480305280073082, device_tracker.google_maps_102671172042975404481, device_tracker.google_maps_113206223653696792209
  condition:
    condition: or
    conditions:
        - condition: and
          conditions:
            - condition: state
              entity_id: input_boolean.nobody_home
              state: 'on'
            - condition: or
              conditions:
                - condition: state
                  entity_id: 'device_tracker.google_maps_107747480305280073082'
                  state: 'home'
                - condition: state
                  entity_id: 'device_tracker.google_maps_102671172042975404481'
                  state: 'home'
                - condition: state
                  entity_id: 'device_tracker.google_maps_113206223653696792209'
                  state: 'home'
        - condition: and
          conditions:
            - condition: state
              entity_id: input_boolean.nobody_home
              state: 'off'
            - condition: and
              conditions:
                - condition: state
                  entity_id: 'device_tracker.google_maps_107747480305280073082'
                  state: 'not_home'
                - condition: state
                  entity_id: 'device_tracker.google_maps_102671172042975404481'
                  state: 'not_home'
                - condition: state
                  entity_id: 'device_tracker.google_maps_113206223653696792209'
                  state: 'not_home'
  action:
    service: input_boolean.toggle
    data:
        entity_id: input_boolean.nobody_home
    
- alias: "Keep max clean only when nobody home"
  initial_state: false
  trigger:
    platform: state
    entity_id: input_boolean.nobody_home
  condition:
    condition: or
    conditions:
        - condition: and
          conditions:
            - condition: state
              entity_id: input_boolean.nobody_home
              state: 'off'
            - condition: state
              entity_id: input_boolean.max_clean
              state: 'on'
        - condition: and
          conditions:
            - condition: state
              entity_id: input_boolean.nobody_home
              state: 'on'
            - condition: state
              entity_id: input_boolean.max_clean
              state: 'off'
  action:
    - service: system_log.write
      data_template:
        message: >-
            {{ '[AUTO] --- Keep max clean only when nobody home --- nobody_home: ' + states.input_boolean.nobody_home.state}}
        level: warning
        
    - service_template: >
        {% if is_state('input_boolean.nobody_home', 'on') %}
            script.turn_on_max_cleaning
        {% else %}
            script.turn_off_max_cleaning
        {% endif %}


- alias: "Notify when SPA Machinery temp below alert value"
  trigger:
    platform: template
    value_template: "{{ states.sensor.temperature_158d0002b87fdd.state | float < states.input_number.min_alert_spa_machinery_temperature.state | float }}"
  action:
    - condition: template
      value_template: "{{ states.sensor.temperature_158d0002b87fdd.state | float < states.input_number.min_alert_spa_machinery_temperature.state | float }}"
    - service: notify.android_lukasz
      data:
        message: "HA-Zabawa - SPA Machinery Temperature"
        title: "Temperature: {{ states.sensor.temperature_158d0002b87fdd.state }} is below threshold ({{ states.input_number.min_alert_spa_machinery_temperature.state }})" 
      
      